WebCamp+Inserts+Bin_base_price, data=data3)
str(mod2)
summary(mod2)
mod2=lm( formula = NewVolSales~ log(Radio)+TV+InStore+Facebook+Twitter+
WebCamp+Inserts+Bin_base_price, data=data3)
#R-square is 70
mod3=lm( formula = NewVolSales~ Radio,data=data3)
summary(mod3)
norNewVol=(data3$NewVolSales - mean(data3$NewVolSales))/sd(data3$NewVolSales)
View(norNewVol)
data3=cbind(data3,norNewVol)
mod4=lm( formula = norNewVol~ Radio+TV+InStore+Facebook+Twitter+
WebCamp+Inserts+Bin_base_price, data=data3)
summary(mod4)
View(data3)
mod5=lm( formula = norNewVol~ Radio+Bin_base_price, data=data3)
summary(mod5)
mod5=lm( formula = norNewVol~ Radio+Bin_base_price+TV+InStore, data=data3)
summary(mod5)
mod5=lm( formula = norNewVol~ Radio+Bin_base_price+TV+InStore+as.factor(WebCamp), data=data3)
summary(mod5)
trainData=read.csv("C:\\Users\\hemanth\\Downloads\\JigSaw\\Titanic\\train.csv")
library(dplyr)
View(trainData)
str(trainData)
colSums(is.na(trainData))
names(trainData)
table(trainData)
table(trainData$Sex)
table(trainData$Sex, trainData$Survived)
View(trainData)
View(trainData)
#imputation of Age in data set
#using mice we can impute the dataset
library(mice)
#imputation of Age in data set
#using mice we can impute the dataset
install.packages("mice")
library(mice)
testData=read.csv("C:\\Users\\hemanth\\Downloads\\JigSaw\\Titanic\\test.csv")
total=rbind(trainData,testData)
names(trainData)
names(testData)
str(trainData)
names(trainData)
mice_mod=mice(trainData[,c("Sex","Pclass","Parch","SibSp","Fare","Embarked")],method = "rf")
mice_output=complete(mice_mod)
hist(trainData$Age, freq=F, main='Age: Original Data',
col='darkgreen', ylim=c(0,0.04))
hist(trainData$Age, freq=F, main='Age: Original Data',
col='darkgreen', ylim=c(0,0.04))
hist(trainData$Age, freq=F, main='Age: Original Data',
col='darkgreen', ylim=c(0,10))
hist(trainData$Age, freq=F, main='Age: Original Data',
col='darkgreen', ylim=c(0,0.1))
hist(trainData$Age, freq=F, main='Age: Original Data',
col='darkgreen', ylim=c(0,0.04))
mice_mod=mice(trainData[,c("Sex","Pclass","Parch","SibSp","Fare","Embarked","Age
mice_mod=mice(trainData[,c("Sex","Pclass","Parch","SibSp","Fare","Embarked","Age")],method = "rf")
mice_mod=mice(trainData[,names(full) %in% c("Sex","Pclass","Parch","SibSp","Fare","Embarked","Age")],method = "rf")
mice_mod=mice(trainData[,names(trainData) %in% c("Sex","Pclass","Parch","SibSp","Fare","Embarked","Age")],method = "rf")
hist(trainData$Age, freq=F, main='Age: Original Data',
col='darkgreen', ylim=c(0,0.04))
trainData$Age=mice_output$
colSums(is.na(trainData))
mice_mod=mice(trainData[,names(trainData) %in% c("Sex","Pclass","Parch","SibSp","Fare","Embarked","Age")],method = "rf")
mice_output=complete(mice_mod)
trainData$Age=mice_output$Age
colSums(is.na(trainData))
trainData$child[trainData$Age<18]<-"child"
trainData$child[trainData$Age>18]<-"adult"
trainData$mother[trainData$Sex=="female"&trainData$Parch>0&trainData$Age>18]<-"mother"
trainData$child=as.factor(trainData$child)
trainData$mother=as.factor(trainData$mother)
md.pattern(trainData)
?pattern
library(mice)
md.pattern(trainData)
md.pattern(trainData)
View(trainData)
trainData$child[trainData$Age<=18]<-"child"
trainData$child[trainData$Age>18]<-"adult"
trainData$child=as.factor(trainData$child)
[
trainData$mother=as.factor(trainData$mother)
trainData$mother[trainData$Sex=="female"&trainData$Parch>0&trainData$Age>18]<-"mother"
trainData$mother=as.factor(trainData$mother)
names(trainData)
mod1=lm(Survived~Pclass+Sex+Age+SibSp+Parch+Cabin+Embarked+child+mother,
data=trainData)
str(trainData)
trainData$Survived=as.factor(trainData$Survived)
mod1=lm(Survived~Pclass+Sex+Age+SibSp+Parch+Cabin+Embarked+child+mother,
data=trainData)
library(car)
mod1=lm(formula=Survived~Pclass+Sex+Age+SibSp+Parch+Cabin+Embarked+child+mother,
data=trainData)
set.seed(200)
library(car)
library(irr)
library(caret)
library(gains)
library(e1071)
mod2=glm(formula=Survived~Pclass+Sex+Age+SibSp+Parch+Cabin+Embarked+child+mother,
data=trainData, family = "binomial")
colSums(is.na(trainData))
trainData$mother=ifelse(is.na(trainData$mother),0)
trainData$mother=ifelse(is.na(trainData$mother),as.character("missing"),as.character(trainData$mother))
trainData$mother=as.factor(trainData$mother)
mod2=glm(formula=Survived~Pclass+Sex+Age+SibSp+Parch+Cabin+Embarked+child+mother,
data=trainData, family = "binomial")
summary(mod2)
colSums(is.na(testData))
colSums(is.na(testData))
mice_mod1=mice(testData[,names(testData) %in% c("Sex","Pclass","Parch","SibSp","Fare","Embarked","Age")],method = "rf")
mice_output=complete(mice_mod)
colSums(is.na(testData))
testData$Age=mice_output$Age
mice_output=complete(mice_mod1)
testData$Age=mice_output$Age
testData$Fare=mice_output$Fare
colSums(is.na(testData))
testData$child[testData$Age<=18]<-"child"
testData$child[testData$Age>18]<-"adult"
testData$mother=ifelse(is.na(testData$mother),as.character("missing"),as.character(testData$mother))
testData$child=as.factor(testData$child)
testData$mother=as.factor(testData$mother)
testData$child[testData$Age<=18]<-"child"
testData$child[testData$Age>18]<-"adult"
testData$mother[testData$Sex=="female"&testData$Parch>0&testData$Age>18]<-"mother"
testData$mother=ifelse(is.na(testData$mother),as.character("missing"),as.character(testData$mother))
testData$child=as.factor(testData$child)
testData$mother=as.factor(testData$mother)
names(trainData)
names(testData)
pred=predict(mod2,type = "response",newdata = testData)
str(trainData)
str(testData)
mod2=glm(formula=Survived~Pclass+Sex+Age+SibSp+Parch+Embarked+child+mother,
data=trainData, family = "binomial")
summary(mod2)
pred=predict(mod2,type = "response",newdata = testData)
View(pred)
table(trainData$Survived)
table(trainData$Survived)/nrow(trainData$Survived)
table(trainData$Survived)/nrow(trainData)
pred=ifelse(pred>0.38,1,0)
output=c(testData$PassengerId,pred)
View(output)
output=cbind(testData$PassengerId,pred)
View(output)
names(output)=c("PassengerId","Survived")
View(output)
colnames(output)=c("PassengerId","Survived")
View(output)
nrow(ouput)
nrow(output)
write.csv(output,file = "submission.csv")
write.csv(output,file = "C:\\Users\\hemanth\\Downloads\\Kaggle\\Titanic\\submission.csv")
write.csv(output,row.names=FALSE,file = "C:\\Users\\hemanth\\Downloads\\Kaggle\\Titanic\\submission.csv")
write.csv(output,row.names=FALSE,file = "C:\\Users\\hemanth\\Downloads\\Kaggle\\Titanic\\submission.csv")
setwd("C:\\Users\\hemanth\\Downloads\\JigSaw\\Day11\\R code Class")
setwd("C:\\Users\\hemanth\\Downloads\\JigSaw\\Day11\\R code Class")
data=read.csv(titanic.csv)
data=read.csv("titanic.csv")
install.packages('party')
install.packages('party')
install.packages("party")
library(party)
library(randomForest)
data$name=as.character(data$name)
str(data)
strsplit(x,split = '[,.]')[[1]][2]
strsplit(x,split = '[,.]')[1][2]
?sub
data$title<-sapply(
data$name,FUN = function(x){
strsplit(x,split = '[,.]')[1][2]
}
)
View(data)
data$title<-sapply(
data$name,FUN = function(x){
strsplit(x,split = '[,.]')[[1]][2]
}
)
View(data)
data$title=sub(' ','',data$title)
data$title[data$title %in% c('Mme','Mlle')]<-'Mlle'
data$title[data$title %in% c('Capt','Don','Major','sir')]<-'Sir'
data$title[data$title %in% c('Dona','Lady','the Countess','Jonkheer')]<-'Lady'
table(data$title)
data$title=as.factor(data$title)
data$familysize=data$sibsp+data$parch+1
data$surname=sapply(data$name,FUN = function(x){
strsplit(x,split = '[,.]')[[1]][1]
})
table(data$title)
data$familyID=paste(as.character(data$familysize),data$surname,sep = "")
View(data)
data$familyID[data$familysize<=2]='small'
table(data$familyID)
famIDs=data.frame(table(data$familyID))
famIDs=famIDs[famIDs$Freq<=2,]
table(data$familyID)
data$familyID[data$familyID %in% famIDs$Var1]='small'
data$familyID=factor(data$familyID)
table(data$familyID)
# imputing the Age
ageFit=rpart(age ~ pclass+sex+sibsp+parch+fare+embarked+title+familysize,
data=data[!is.na(data$age),], method="anova")
library(rpart)
# imputing the Age
ageFit=rpart(age ~ pclass+sex+sibsp+parch+fare+embarked+title+familysize,
data=data[!is.na(data$age),], method="anova")
data$age[is.na(data$age)]= predict(ageFit,data[is.na(data$age),]))
data$age[is.na(data$age)]= predict(ageFit,data[is.na(data$age),])
summary(data)
# Fill in Embarked blanks
summary(titanic$embarked)
which(data$embarked == '')
# Fill in Embarked blanks
summary(data$embarked)
which(data$embarked == '')
data$embarked[c(62,830)] = "S"
data$embarked <- factor(data$embarked)
summary(data$fare)
which(is.na(data$fare))
data$fare[1044] <- median(data$fare, na.rm=TRUE)
# New factor for Random Forests, only allowed <32 levels, so reduce number
titanic$familyID2 <- titanic$familyID
# New factor for Random Forests, only allowed <32 levels, so reduce number
data$familyID2 <- data$familyID
data$familyID2[data$familysize <= 3] <- 'Small'
data$familyID2 <- as.character(data$familyID2)
data$familyID2[data$familysize <= 3] <- 'Small'
which(is.na(data$fare))
summary(data$fare)
which(data$embarked == '')
data$embarked[c(169,285,1310)] = "S"
which(is.na(data$fare))
data$fare[c(1226,1310)] <- median(data$fare, na.rm=TRUE)
colSums(is.na(data))
nrow(data)
train <- data[1:891,]
test <- data[892:1309,]
library(randomForest)
set.seed(415)
fit <- randomForest(as.factor(survived) ~ pclass + sex + age + sibsp + parch +
fare + embarked + title + familysize + familyID2,
data=train, importance=TRUE, ntree=2000)
View(data)
na.omit(data)
data=na.omit(data)
nrow(data)
data=read.csv("titanic.csv")
data$name=as.character(data$name)
data$title<-sapply(
data$name,FUN = function(x){
strsplit(x,split = '[,.]')[[1]][2]
}
)
data$title=sub(' ','',data$title)
data$title[data$title %in% c('Mme','Mlle')]<-'Mlle'
data$title[data$title %in% c('Capt','Don','Major','sir')]<-'Sir'
data$title[data$title %in% c('Dona','Lady','the Countess','Jonkheer')]<-'Lady'
data$title=as.factor(data$title)
data$surname=sapply(data$name,FUN = function(x){
strsplit(x,split = '[,.]')[[1]][1]
})
data$familyID=paste(as.character(data$familysize),data$surname,sep = "")
data$familyID[data$familysize<=2]='small'
famIDs=data.frame(table(data$familyID))
famIDs=famIDs[famIDs$Freq<=2,]
data$familyID[data$familyID %in% famIDs$Var1]='small'
data$familyID=factor(data$familyID)
ageFit=rpart(age ~ pclass+sex+sibsp+parch+fare+embarked+title+familysize,
data=data[!is.na(data$age),], method="anova")
data$age[is.na(data$age)]= predict(ageFit,data[is.na(data$age),])
summary(data)
summary(data$embarked)
which(data$embarked == '')
data$embarked[c(169,285,1310)] = "S"
data$embarked <- factor(data$embarked)
summary(data$fare)
which(is.na(data$fare))
data$fare[c(1226,1310)] <- median(data$fare, na.rm=TRUE)
data$familyID2 <- data$familyID
data$familyID2 <- as.character(data$familyID2)
data$familyID2[data$familysize <= 3] <- 'Small'
titanic$familyID2 <- factor(titanic$familyID2)
View(data)
colSums(is.na(data))
nrow(data)
colSums(is.na(data))
data=read.csv("titanic.csv")
data$name=as.character(data$name)
data$title<-sapply(
data$name,FUN = function(x){
strsplit(x,split = '[,.]')[[1]][2]
}
)
data$title=sub(' ','',data$title)
data$title[data$title %in% c('Mme','Mlle')]<-'Mlle'
data$title[data$title %in% c('Capt','Don','Major','sir')]<-'Sir'
data$title[data$title %in% c('Dona','Lady','the Countess','Jonkheer')]<-'Lady'
colSums(is.na(data))
data$title=as.factor(data$title)
data$familysize=data$sibsp+data$parch+1
data$surname=sapply(data$name,FUN = function(x){
strsplit(x,split = '[,.]')[[1]][1]
})
data$familyID=paste(as.character(data$familysize),data$surname,sep = "")
data$familyID[data$familysize<=2]='small'
famIDs=data.frame(table(data$familyID))
famIDs=famIDs[famIDs$Freq<=2,]
data$familyID[data$familyID %in% famIDs$Var1]='small'
data$familyID=factor(data$familyID)
ageFit=rpart(age ~ pclass+sex+sibsp+parch+fare+embarked+title+familysize,
data=data[!is.na(data$age),], method="anova")
colSums(is.na(data))
agefit <- rpart(age ~ pclass + sex + sibsp + parch + fare + embarked + title + familysize,
data=data[!is.na(data$age),], method="anova")
data$age[is.na(data$age)]= predict(ageFit,data[is.na(data$age),])
summary(data)
colSums(is.na(data))
fit <- randomForest(as.factor(survived) ~ pclass + sex + age + sibsp + parch +
fare + embarked + title + familysize + familyID2,
data=train, importance=TRUE, ntree=2000)
# New factor for Random Forests, only allowed <32 levels, so reduce number
data$familyID2 <- data$familyID
data$familyID2 <- as.character(data$familyID2)
data$familyID2[data$familysize <= 3] <- 'Small'
data$familyID2 <- factor(data$familyID2)
colSums(is.na(data))
which(is.na(data$fare))
data$fare[c(1226,1310)] <- median(data$fare, na.rm=TRUE)
colSums(is.na(data))
nrow(data)
train <- data[1:891,]
test <- data[892:1309,]
set.seed(415)
fit <- randomForest(as.factor(survived) ~ pclass + sex + age + sibsp + parch +
fare + embarked + title + familysize + familyID2,
data=train, importance=TRUE, ntree=2000)
varImpPlot(fit)
varImpPlot(fit)
prediction <- predict(fit, test)
prediction
view(prediction)
View(prediction)
read.csv("goodbad.csv")
setwd("C:\\Users\\hemanth\\Downloads\\JigSaw\\Day11\\R code Class")
goodbad=read.csv("goodbad.csv")
colSums(is.na(goodbad))
# imputing the age
index=which(is.na(goodbad$Age))
index
goodbad$Age(index)
goodbad$Age[index]
goodbad$Age[index]=mean(goodbad$Age,na.rm = TRUE)
str(goodbad)
goodbad$GoodBad=as.factor(goodbad$GoodBad)
table(goodbad)
summary(goodbad)
nrow(goodbad)
test <- data[701:1000,]
train <- data[1:700,]
nrow(train)
nrow(test)
library(randomForest)
set.seed(415)
names(goodbad)
frst=randomForest(GoodBad~.,
data=train, importance=TRUE, ntree=2000)
names(train)
train <- goodbad[1:700,]
test <- goodbad[701:1000,]
set.seed(415)
frst=randomForest(GoodBad~.,
data=train, importance=TRUE, ntree=2000)
varImpPlot(frst)
prediction <- predict(frst, test)
test$predict=prediction
prediction
test$predict=prediction
library(caret)
View(test)
library(caret)
View(test)
confusionMatrix(prediction,test$GoodBad)
names(train)
logisticModel1=glm(GoodBad~Check_Account_Status+Duration+CreditHistory+
Purpose+Amount+SavingsAcc+EmployTenure+Rate+Status+
Debtors+CurrResidTenure+Propert+Age+Plans,
data=goodbad,family = "binomial")
summary(logisticModel1)
logisticModel1=glm(GoodBad~Check_Account_Status+Duration+CreditHistory+
Purpose+Amount+SavingsAcc+EmployTenure+Rate+Status+
Debtors+CurrResidTenure+Propert+Age+Plans,
data=train,family = "binomial")
pred<-predict(logisticModel1,type="response",newdata=test)
confusionMatrix(test$GoodBad,pred)
pred
summary(logisticModel1)
test$preditlogist=ifelse(pred>5,1,2)
test$preditlogist=as.factor(test$preditlogist)
confusionMatrix(test$GoodBad,test$preditlogist)
table(test)
table(test$preditlogist)
test$preditlogist=ifelse(pred>0.5,1,2)
confusionMatrix(test$GoodBad,test$preditlogist)
table(test$preditlogist)
table(test$GoodBad)
plot(pred)
plot(logisticModel1$fitted.values)
plot(pred)
plot(pred)
confusionMatrix(test$GoodBad,test$preditlogist)
var1=varImpPlot(frst)
var1
type(var1)
var1[,1]
type(var1[,1])
for (i in var1[,1]) {
if (i>10) {
list=list+c(i)
}
}
for (i in var1[,1]) {
if (i>10) {
list=c(list,i)
}
}
list
var1
var1=data.frame(varImpPlot(frst))
View(var1)
library(dplyr)
filter(var1$MeanDecreaseAccuracy>10)%>%colnames()
filter(var1$MeanDecreaseAccuracy>10,colnames())
filter(var1$MeanDecreaseAccuracy>10)
str(var1)
setwd("C:\\Users\\hemanth\\Downloads\\Kaggle\\Titanic")
titanicTrain=read.csv("train.csv")
View(titanicTrain)
library(party)
library(randomForest)
titanicTrain$Name=as.character(titanicTrain$Name)
titanicTrain$title=sapply(
titanicTrain$Name, FUN = function(x){
strsplit(x,split = '[,.]')[[1]][2]
}
)
table(titanicTrain$title)
titanicTrain$title=sub(' ','',titanicTrain$title)
titanicTrain$title[titanicTrain$title %in% c('Mme','Mlle')]<-'Mlle'
titanicTrain$title[titanicTrain$title %in% c('Capt','Don','Major','sir')]<-'Sir'
titanicTrain$title[titanicTrain$title %in% c('Dona','Lady','the Countess','Jonkheer')]<-'Lady'
titanicTrain$title[titanicTrain$title %in% c('Dona','Lady','the Countess','Jonkheer')]<-'Lady'
colSums(titanicTrain)
colSums(is.na(titanicTrain)0
colSums(is.na(titanicTrain))
titanicTrain$title=as.factor(titanicTrain$title)
titanicTrain$familysize=titanicTrain$SibSp+titanicTrain$Parch+1
titanicTrain$surname=sapply(titanicTrain$Name,
FUN = function(x){
strsplit(x,split = '[,.]')[[1]][1]
})
titanicTrain$familyID=paste(as.character(titanicTrain$familysize),titanicTrain$surname,sep = "")
titanicTrain$familyID[titanicTrain$familysize>=2]
titanicTrain$familyID[titanicTrain$familysize>=2]="small"
famIDs=famIDs[famIDs$Freq<=2,]
titanicTrain$familyID[titanicTrain$familyID %in% famIDs$Var1]='small'
titanicTrain$familyID=factor(titanicTrain$familyID)
agefit <- rpart(age ~ pclass + sex + sibsp + parch + fare + embarked + title + familysize,
data=titanicTrain[!is.na(titanicTrain$age),], method="anova")
# imputing the Age
names(titanicTrain)
agefit <- rpart(Age ~ pclass + sex + sibsp + parch + fare + embarked + title + familysize,
data=titanicTrain[!is.na(titanicTrain$age),], method="anova")
agefit <- rpart(Age ~ Pclass + sex + Sibsp + Parch +Fare + Embarked + title + familysize,
data=titanicTrain[!is.na(titanicTrain$age),], method="anova")
agefit <- rpart(Age ~ Pclass + Sex + Sibsp + Parch +Fare + Embarked + title + familysize,
data=titanicTrain[!is.na(titanicTrain$age),], method="anova")
# imputing the Age
names(titanicTrain)
agefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch +Fare + Embarked + title + familysize,
data=titanicTrain[!is.na(titanicTrain$age),], method="anova")
titanicTrain$Age[is.na(titanicTrain$Age)]= predict(ageFit,titanicTrain[is.na(titanicTrain$Age),])
titanicTrain$Age[is.na(titanicTrain$Age)]= predict(ageFit,titanicTrain[is.na(titanicTrain$Age),])
titanicTrain$Age[is.na(titanicTrain$Age)]= predict(ageFit,titanicTrain[is.na(titanicTrain$Age),])
# Load the dataset
setwd("C:\\Users\\hemanth\\Downloads\\JigSaw\\Day11\\R code Class\\classcodes\\")
library(mlbench)
library(caret)
library(caretEnsemble)
data(Ionosphere)
install.packages("mlbench")
install.packages("caretEnsemble")
data(Ionosphere)
dataset <- read.csv("Ionosphere.csv")
dataset <- dataset[,-2]
dataset$V1 <- as.numeric(as.character(dataset$V1))
head(dataset)
# Example of Boosting Algorithms
control <- trainControl(method="repeatedcv", number=10, repeats=3)
seed <- 7
metric <- "Accuracy"
set.seed(seed)
View(dataset)
save.image(file = GBB.R)
